{"name": "Проверка вход в аккаунт зарегистрированного пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "self = <test_login_user.TestLoginUser object at 0x102c9cf10>, create_user = ({'email': 'fking@example.org', 'name': 'Crystal', 'password': 'f)@z0$OokB'}, <Response [403]>)\n\n    @allure.title('Проверка вход в аккаунт зарегистрированного пользователя')\n    @allure.description('Создаем корректного пользователя, логиним его в систему, затем удаляем пользователя')\n    def test_correct_login_user(self, create_user):\n        # Получаем из фикстуры информацию о созданном пользователе и пишем в переменную\n        response = create_user\n        # Отправляем запрос на вход в аккаунт с учетными данными зарегистрированного пользователя\n        login = requests.post(Urls.LOGIN_USER, data=response[0])\n        # Проверяем, что статус ответа успешный и есть 'success' в ответе\n>       assert login.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntests/test_login_user.py:17: AssertionError"}, "description": "Создаем корректного пользователя, логиним его в систему, затем удаляем пользователя", "start": 1728086132695, "stop": 1728086132902, "uuid": "86ad6a7f-120b-44ca-9a61-55f4fbc0fc33", "historyId": "a6a3bce1e673e2f0fca04d18540489a1", "testCaseId": "a6a3bce1e673e2f0fca04d18540489a1", "fullName": "tests.test_login_user.TestLoginUser#test_correct_login_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_user"}, {"name": "subSuite", "value": "TestLoginUser"}, {"name": "host", "value": "amiBook.local"}, {"name": "thread", "value": "41374-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_user"}]}