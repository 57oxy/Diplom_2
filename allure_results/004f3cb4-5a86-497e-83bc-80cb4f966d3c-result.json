{"name": "Проверка получения статуса заказа авторизованным пользователем", "status": "broken", "statusDetails": {"message": "KeyError: 'accessToken'", "trace": "self = <test_view_orders.TestGetOrder object at 0x104be1000>, create_user = ({'email': 'david36@example.net', 'name': 'Kayla', 'password': '6F+85VNp3T'}, <Response [403]>)\n\n    @allure.title('Проверка получения статуса заказа авторизованным пользователем')\n    @allure.description('Регистрируем и авторизуем пользователя, делаем заказ и получаем информацию о заказе')\n    def test_get_orders_by_authorized_user(self, create_user):\n        # Берем из ответа сервера токен\n>       token = create_user[1].json()['accessToken']\nE       KeyError: 'accessToken'\n\ntests/test_view_orders.py:12: KeyError"}, "description": "Регистрируем и авторизуем пользователя, делаем заказ и получаем информацию о заказе", "start": 1728086184738, "stop": 1728086184739, "uuid": "2dc818ff-b115-44ba-a70b-3b00f58ef6ac", "historyId": "05268a7f1e983e84d354700990c01656", "testCaseId": "05268a7f1e983e84d354700990c01656", "fullName": "tests.test_view_orders.TestGetOrder#test_get_orders_by_authorized_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_view_orders"}, {"name": "subSuite", "value": "TestGetOrder"}, {"name": "host", "value": "amiBook.local"}, {"name": "thread", "value": "41420-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_view_orders"}]}