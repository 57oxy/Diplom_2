{"name": "Проверка уникального пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "self = <test_create_user.TestCreateUser object at 0x102c9d7e0>, create_user = ({'email': 'amyberry@example.com', 'name': 'Ryan', 'password': '(^9Rdon@Ap'}, <Response [403]>)\n\n    @allure.title('Проверка уникального пользователя')\n    @allure.description('Отправляем запрос, проверяем успешный ответ')\n    def test_create_user(self, create_user):\n        # Получаем из фикстуры информацию о созданном пользователе и пишем в переменную\n        response = create_user\n        # Проверяем, что статус ответа 200 и в ответе есть 'success'\n>       assert response[1].status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\ntests/test_create_user.py:16: AssertionError"}, "description": "Отправляем запрос, проверяем успешный ответ", "start": 1728086131249, "stop": 1728086131249, "uuid": "98615d41-e6ba-4622-a14a-0304ad9835a7", "historyId": "10b6479399f5a9e08b60b30059e4f4f1", "testCaseId": "10b6479399f5a9e08b60b30059e4f4f1", "fullName": "tests.test_create_user.TestCreateUser#test_create_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_user"}, {"name": "subSuite", "value": "TestCreateUser"}, {"name": "host", "value": "amiBook.local"}, {"name": "thread", "value": "41374-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_user"}]}